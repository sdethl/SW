1. Single responsibility principle
2. Open closed 
3. Liskov substitution principle
4. Interface segregation 
5. Dependency Inversion

Single responsibility principle
A class should have one, and only one, reason to change.

Open closed 
You should be able to extend a classes behavior, without modifying it.
Open for extension
Closed for modification

Liskov substitution principle (LSP)
Derived classes must be substitutable for their base classes.

Interface segregation
Make fine grained interfaces that are client specific.

Dependency Inversion
Depend on abstractions, not on concretions.
A. High level modules should not depend upon low level modules. Both should depend upon abstractions.
B. Abstractions should not depend upon details. Details should depend upon abstractions.





